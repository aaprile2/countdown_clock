#include <Wire.h>
#include <RTClib.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SH1106.h>

// Reset PIN
#define OLED_RESET 4 

// Module instantiations
RTC_DS3231 rtc;
Adafruit_SH1106 display(OLED_RESET);

// Global variables
//// Target date
const DateTime endDate = DateTime(2025, 6, 16, 0, 0, 0); //// Target date

//// Observed drift (s)
const int drift = 15; 

//// Party light controls
const int ledPins[] = {9, 10, 11, 12}; 
const int numPins = sizeof(ledPins) / sizeof(ledPins[0]); 
const int numStates = numPins / 2;
unsigned long previousTime;
int state; 
const unsigned long interval = 500; //// Blink interval (ms)

//// Milestone bitmaps
const unsigned char intro [] PROGMEM = {
	// 'Screenshot 2025-02-22 at 6, 128x64px
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xc0, 0x03, 0xcf, 0xce, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xc8, 0x01, 0xcf, 0x8e, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xce, 0x79, 0xcf, 0x8e, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xce, 0x7c, 0x9f, 0x0e, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0x8e, 0x7c, 0x1f, 0x06, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x0e, 0x7c, 0x3e, 0x06, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xce, 0x7e, 0x3c, 0x06, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xce, 0x7e, 0x3c, 0x26, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xce, 0x7e, 0x7c, 0xf7, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xc8, 0x1e, 0x79, 0xf2, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xc8, 0x1c, 0xf9, 0xf2, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc9, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x9d, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xbc, 0xc7, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xbe, 0x03, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xbf, 0xfb, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xbf, 0xf9, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xbf, 0xfb, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x7f, 0xff, 0xe3, 0xff, 0xf9, 0xc1, 0xff, 0xff, 0xff, 0xbf, 0xf3, 0xff, 0xff, 
	0xff, 0xff, 0xe7, 0x3f, 0xff, 0xc7, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xbf, 0xe7, 0xff, 0xff, 
	0xff, 0xff, 0xef, 0x9f, 0xff, 0x8f, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xbf, 0xcf, 0xff, 0xff, 
	0xff, 0xff, 0xcf, 0xdf, 0xff, 0x9f, 0xff, 0xff, 0xfc, 0x00, 0x7f, 0xff, 0xbf, 0x9f, 0xff, 0xff, 
	0xff, 0xff, 0xef, 0xdf, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xc0, 0x1f, 0xff, 0xbc, 0x3f, 0xff, 0xff, 
	0xff, 0xf0, 0x0f, 0xdf, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x87, 0xff, 0x91, 0xff, 0xff, 0xff, 
	0xff, 0xe7, 0xdf, 0xdf, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 0x87, 0xff, 0xff, 0xff, 
	0xff, 0xef, 0xff, 0xdf, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xef, 0xff, 0xdf, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xef, 0xff, 0xdf, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xe7, 0xff, 0xdf, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf3, 0xff, 0xdf, 0xfd, 0xff, 0xff, 0xfe, 0x7b, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0xff, 0xdf, 0xf9, 0xff, 0xff, 0xfc, 0x79, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0x07, 0x9f, 0xfb, 0xff, 0xff, 0xfc, 0x71, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xc0, 0x3f, 0xf3, 0xff, 0xff, 0xfc, 0x71, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0x3f, 0xf3, 0x7f, 0xff, 0xfe, 0xfb, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe4, 0x0f, 0xff, 0xff, 0xff, 0xc0, 0x7f, 0xef, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xc0, 0x3f, 0xef, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0xff, 0xff, 0xff, 0xc0, 0x3f, 0xef, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x7f, 0xff, 0xff, 0xc0, 0x7f, 0xef, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x7f, 0xff, 0xff, 0xe0, 0x7f, 0xef, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc8, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc8, 0x00, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc8, 0x00, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc8, 0x00, 0x9f, 0xff, 0xfe, 0x1f, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc8, 0x00, 0x1f, 0xff, 0xf8, 0x03, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc8, 0x00, 0x1f, 0xff, 0xf3, 0xf1, 0xf7, 0xc7, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc8, 0x00, 0x5f, 0xbf, 0xf7, 0xfc, 0xe7, 0xe3, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc8, 0x00, 0x5f, 0xbf, 0xe7, 0xfe, 0x6f, 0xf3, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x5f, 0x9f, 0xcf, 0xfe, 0x1f, 0xf9, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x0f, 0xcf, 0xdf, 0xcf, 0x1f, 0xd9, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x08, 0x00, 0x00, 0x1c, 0xe7, 0x1d, 0xd9, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x06, 0xf6, 0x0c, 0xc9, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x70, 0x60, 0xc3, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x83, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff
};

const unsigned char one [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xbf, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xbf, 0xbf, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xbf, 0x7f, 0xbf, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0x3e, 0xff, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x0f, 0x9f, 0x3d, 0xfe, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xcf, 0x3b, 0xfd, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xcf, 0x13, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xe7, 0x87, 0xf7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xf9, 0xcf, 0xef, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x7e, 0x0f, 0xef, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xbd, 0xf3, 0xff, 0xfc, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xdb, 0xfd, 0xf8, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xe7, 0xfe, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xe7, 0xff, 0x7f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf8, 0x00, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xe7, 0xff, 0x7f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xe6, 0x7f, 0xbf, 0x9f, 0xff, 0xff, 
	0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xfe, 0x04, 0x3f, 0xbf, 0xc7, 0xff, 0xff, 
	0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0x80, 0xfc, 0x00, 0x1f, 0xbf, 0xe3, 0xff, 0xff, 
	0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xfe, 0x1c, 0xfc, 0x06, 0x1f, 0xbf, 0xf1, 0xff, 0xff, 
	0xff, 0xff, 0xc3, 0x80, 0xff, 0xff, 0xff, 0xfc, 0x7e, 0x7e, 0x1b, 0xff, 0x3f, 0x3e, 0x7f, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xf8, 0xfe, 0x7f, 0x3d, 0xff, 0x7f, 0x9f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xf9, 0xff, 0x3e, 0x7e, 0xfe, 0xff, 0xcf, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xc1, 0xff, 0x81, 0xff, 0xcf, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xfc, 0x7e, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x7f, 0xf8, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xf3, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xf7, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xe7, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xf7, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xf9, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xfc, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xfe, 0x7f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xef, 0x3f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xef, 0x9f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xf6, 0xcf, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xc0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xf6, 0xef, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x80, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xf2, 0x4f, 0x8c, 0x3f, 0xff, 
	0xff, 0xff, 0x80, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xf9, 0x00, 0x7f, 0x8f, 0xff, 
	0xff, 0xff, 0x80, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7c, 0x07, 0xff, 0xf1, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x18, 0x70, 0xff, 0xfb, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xad, 0x7e, 0x07, 0xfb, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x6d, 0x3f, 0xf0, 0x3d, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x29, 0x8f, 0xff, 0x81, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x59, 0x00, 0x77, 0xff, 0xf1, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xcf, 0xec, 0x0b, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x0c, 0x00, 0x09, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char ten [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xdf, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xcf, 0xfc, 0xff, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xef, 0xfc, 0xfc, 0x79, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xcf, 0xf9, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xef, 0xf9, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe7, 0xf3, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe7, 0xf3, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe7, 0xf3, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xdf, 0xf3, 0xf3, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xdf, 0xf1, 0xf3, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xcf, 0xf9, 0xf3, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xe7, 0xfc, 0x7f, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xe7, 0xff, 0x7f, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf1, 0xff, 0xff, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0x7f, 0xff, 0xfc, 0x1f, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xe0, 0x0f, 0xf8, 0x19, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x80, 0x0f, 0xf3, 0xdf, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0x3f, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0x87, 0xff, 0xfe, 0x01, 0xff, 0xff, 
	0xfd, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xfe, 0x07, 0xff, 0xf8, 0x00, 0x3f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xfc, 0x07, 0xff, 0xe0, 0x00, 0x1f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xf0, 0x07, 0xff, 0xc0, 0x00, 0x07, 0xff, 
	0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xc0, 0x07, 0xff, 0x80, 0xfe, 0x07, 0xff, 
	0xff, 0xff, 0x0f, 0xfe, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xc0, 0x07, 0xff, 0x03, 0xff, 0x03, 0xff, 
	0xff, 0xfe, 0x3f, 0xfe, 0x7f, 0xff, 0xf7, 0x9f, 0xff, 0xc0, 0x07, 0xfe, 0x07, 0xff, 0x81, 0xff, 
	0xff, 0xf8, 0xff, 0xfe, 0x3f, 0xff, 0xe6, 0x3f, 0xff, 0xe7, 0x07, 0xfe, 0x07, 0xff, 0xc1, 0xff, 
	0xff, 0xf1, 0xfd, 0xfe, 0x9f, 0xff, 0x80, 0x7f, 0xff, 0xff, 0x07, 0xfc, 0x0f, 0xff, 0xc0, 0xff, 
	0xff, 0xe7, 0xf1, 0xfe, 0xc0, 0x00, 0x03, 0xff, 0xff, 0xff, 0x07, 0xfc, 0x1f, 0xff, 0xc0, 0xff, 
	0xff, 0xef, 0xe3, 0xfe, 0x6e, 0x66, 0x1f, 0xff, 0xff, 0xff, 0x07, 0xfc, 0x1f, 0xff, 0xe0, 0xff, 
	0xff, 0xdf, 0xc7, 0xff, 0x0e, 0x61, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xfc, 0x1f, 0xff, 0xe0, 0xff, 
	0xff, 0xff, 0x8f, 0xf9, 0xb0, 0x0f, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xfc, 0x1f, 0xff, 0xe0, 0xff, 
	0xff, 0xff, 0x7f, 0xc0, 0x3f, 0xdf, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xfc, 0x1f, 0xff, 0xe0, 0xff, 
	0xff, 0xff, 0xff, 0x1f, 0x8f, 0x9f, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xfc, 0x1f, 0xff, 0xe0, 0xff, 
	0xff, 0xff, 0xfe, 0x7f, 0xe7, 0x3f, 0xcf, 0xff, 0xff, 0xfe, 0x0f, 0xfc, 0x1f, 0xff, 0xe0, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe7, 0x3c, 0x27, 0xff, 0xff, 0xfe, 0x0f, 0xfc, 0x1f, 0xff, 0xe0, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe7, 0x03, 0xef, 0xff, 0xff, 0xfe, 0x0f, 0xfc, 0x1f, 0xff, 0xc0, 0xff, 
	0xff, 0xff, 0xff, 0xc7, 0xe7, 0x9f, 0x9f, 0xff, 0xff, 0xfe, 0x0f, 0xfc, 0x1f, 0xff, 0xc0, 0xff, 
	0xff, 0xff, 0xff, 0x98, 0x0f, 0x9f, 0x3f, 0xff, 0xff, 0xfe, 0x0f, 0xfc, 0x1f, 0xff, 0xc1, 0xff, 
	0xff, 0xff, 0xff, 0x9f, 0xef, 0xcc, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xfc, 0x0f, 0xff, 0xc1, 0xff, 
	0xff, 0xff, 0xff, 0xcf, 0xff, 0xe3, 0xe7, 0xff, 0xff, 0xfe, 0x0f, 0xfe, 0x0f, 0xff, 0x81, 0xff, 
	0xff, 0xff, 0xff, 0xe1, 0xff, 0xf3, 0xe7, 0xbf, 0xff, 0xfe, 0x0f, 0xfe, 0x07, 0xff, 0x03, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0x1f, 0xf9, 0xd6, 0x3f, 0xff, 0xfe, 0x0f, 0xff, 0x03, 0xfe, 0x03, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xbf, 0xfd, 0xd9, 0xbf, 0xff, 0xfe, 0x07, 0xff, 0x01, 0xfc, 0x07, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x0e, 0x7e, 0xd9, 0x27, 0xff, 0xc0, 0x00, 0x7f, 0x80, 0x00, 0x0f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x06, 0x3e, 0xda, 0x07, 0xff, 0x80, 0x00, 0x7f, 0xc0, 0x00, 0x1f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x10, 0xbc, 0xb6, 0x67, 0xff, 0xc0, 0x00, 0x7f, 0xf0, 0x00, 0x3f, 0xff, 
	0xff, 0xff, 0xff, 0xc0, 0x89, 0x9d, 0xb4, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x01, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x1c, 0xc8, 0x98, 0x29, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0x07, 0xfc, 0x64, 0xd3, 0x82, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfb, 0xff, 0xe3, 0x30, 0xcc, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf7, 0xff, 0x8f, 0x98, 0xdf, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xe7, 0xfe, 0x3f, 0xcc, 0x1f, 0xa7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xcf, 0xf1, 0xff, 0xf0, 0x3f, 0x6f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9f, 0xc7, 0xff, 0xfc, 0x1f, 0x4f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x3c, 0x3f, 0xff, 0xff, 0x4e, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x03, 0xff, 0xff, 0xff, 0x6e, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xb7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x97, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char twentyFive [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf3, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf3, 0xff, 0x7f, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf3, 0xfe, 0x7f, 0x3f, 0xff, 0xe0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf3, 0xfe, 0xfe, 0xff, 0xff, 0xc1, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf7, 0xfd, 0xfc, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf7, 0xf9, 0xfd, 0xff, 0xff, 0x0c, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf7, 0xfb, 0xf9, 0xff, 0xfc, 0x07, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf1, 0xf7, 0xf3, 0xf9, 0xff, 0xc1, 0x00, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf1, 0xe3, 0xf3, 0xf9, 0xff, 0x0e, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf9, 0xf3, 0xf3, 0xf9, 0xe0, 0x7e, 0x00, 0x3e, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf9, 0xf9, 0xf7, 0xfc, 0xc0, 0x7f, 0xc1, 0x9f, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfd, 0xff, 0xff, 0xfe, 0x04, 0x1e, 0x00, 0x1f, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0xff, 0xff, 0xff, 0x80, 0x00, 0x3c, 0x1f, 0x80, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xfe, 0x7f, 0x80, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0x80, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0xff, 0xff, 0xff, 0xdf, 0x60, 0xff, 0xff, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0x7f, 0xff, 0xff, 0x9e, 0x64, 0x87, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf0, 0x7f, 0xff, 0xff, 0x9f, 0x60, 0x10, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x80, 0x7f, 0xff, 0xff, 0x9f, 0x24, 0x79, 0xfc, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0x81, 0xf3, 0xfe, 0x1f, 0xff, 0x03, 0xff, 0xc0, 0x00, 0x1f, 
	0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xb3, 0xff, 0xff, 0xfc, 0x00, 0x7f, 0xc0, 0x00, 0x1f, 
	0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xe7, 0x27, 0xff, 0xff, 0xf0, 0x00, 0x3f, 0xc0, 0x00, 0x1f, 
	0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xce, 0x6f, 0xff, 0xff, 0xe0, 0x78, 0x1f, 0xc3, 0xff, 0xff, 
	0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0x9e, 0xcf, 0xff, 0xff, 0xc1, 0xfe, 0x1f, 0xc3, 0xff, 0xff, 
	0xff, 0xff, 0xe7, 0xff, 0xff, 0xfe, 0x3c, 0xdf, 0xff, 0xff, 0xe7, 0xfe, 0x1f, 0xc3, 0xff, 0xff, 
	0xff, 0xff, 0xef, 0xff, 0xff, 0xfc, 0x79, 0x9f, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xc3, 0x01, 0xff, 
	0xff, 0xff, 0xdf, 0xff, 0xff, 0xfc, 0xf3, 0xbf, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xc0, 0x00, 0x7f, 
	0xff, 0xff, 0x9f, 0xff, 0xff, 0xf9, 0xe7, 0x3f, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0xc0, 0x00, 0x3f, 
	0xff, 0xff, 0xbf, 0x9f, 0xff, 0xf3, 0xce, 0x7f, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0x80, 0x7c, 0x1f, 
	0xff, 0xff, 0xff, 0x3f, 0xff, 0xc7, 0xbc, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0x81, 0xfe, 0x0f, 
	0xff, 0xff, 0xff, 0x30, 0x7f, 0x8e, 0x79, 0xff, 0xff, 0xff, 0xff, 0x01, 0xff, 0x83, 0xff, 0x0f, 
	0xff, 0xff, 0xff, 0x3f, 0x0f, 0x9c, 0xf3, 0xff, 0xff, 0xff, 0xfc, 0x07, 0xff, 0xc7, 0xff, 0x0f, 
	0xff, 0xff, 0xff, 0xff, 0xcf, 0xf9, 0xe7, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0x0f, 
	0xff, 0xff, 0xff, 0xff, 0xe7, 0xf3, 0x8f, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0x0f, 
	0xff, 0xff, 0xff, 0xff, 0xe7, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x0f, 
	0xff, 0xff, 0xff, 0xff, 0xe7, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0xff, 0xff, 0x0f, 
	0xff, 0xff, 0xff, 0xff, 0xef, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xfe, 0x1f, 
	0xff, 0xff, 0xff, 0xff, 0xef, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 0x87, 0xfc, 0x1f, 
	0xff, 0xff, 0xff, 0xff, 0xdf, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x1f, 0x83, 0xf0, 0x3f, 
	0xff, 0xff, 0xff, 0xff, 0x9f, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xc0, 0x00, 0x7f, 
	0xff, 0xff, 0xff, 0xff, 0x3f, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x02, 0x1f, 0xe0, 0x01, 0xff, 
	0xff, 0xf8, 0x07, 0xff, 0x3f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x0f, 0xff, 
	0xff, 0xe7, 0xf8, 0xff, 0x7f, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xcf, 0xfe, 0x7f, 0x3f, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xef, 0xff, 0x8f, 0x1f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xe7, 0xff, 0xe2, 0x0f, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xef, 0xff, 0x80, 0x07, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xef, 0xfc, 0x70, 0x07, 0x4f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xc6, 0x0f, 0xff, 0xec, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xc3, 0xff, 0xff, 0xed, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xcf, 0xff, 0xf8, 0xc9, 0x9d, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x38, 0x18, 0x1f, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0xf9, 0xf0, 0x00, 0x21, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfd, 0xe2, 0x03, 0xff, 0xf8, 0x80, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfd, 0xcf, 0xff, 0xff, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x00, 0x00, 0x0f, 0xf1, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfd, 0xc6, 0x00, 0xc0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char fifty [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa5, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfb, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xbf, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfa, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xbf, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xdf, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xdf, 0xbe, 0x1f, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xef, 0xb0, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x7f, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xef, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xbe, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xef, 0xdf, 0xff, 0xff, 0xff, 0xff, 0x7e, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xe7, 0xff, 0xfe, 0xff, 0xff, 0xff, 0x7d, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xcf, 0xff, 0x1e, 0xfc, 0xff, 0xfe, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9f, 0xf0, 0xfe, 0xfe, 0xf7, 0xfc, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x3f, 0xef, 0xfe, 0xfe, 0xe3, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfc, 0x7f, 0xef, 0xfe, 0xfc, 0xcf, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf9, 0xff, 0xe7, 0xfe, 0xfd, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf3, 0xfc, 0xf7, 0xfe, 0x79, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf2, 0xf7, 0xfe, 0x7b, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xee, 0x7b, 0xff, 0x77, 0xdf, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9f, 0x7b, 0xff, 0x7f, 0xc6, 0x3c, 0x7f, 0xff, 0xff, 0xc0, 0x00, 0x3f, 0xf8, 0x07, 0xff, 
	0xff, 0x3f, 0x7e, 0x00, 0x7f, 0xb1, 0xfe, 0x7f, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xe0, 0x01, 0xff, 
	0xff, 0xff, 0x7e, 0xff, 0xff, 0xf7, 0xff, 0x3f, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xc0, 0x00, 0xff, 
	0xff, 0xff, 0x3f, 0xff, 0xff, 0xd7, 0xff, 0x3f, 0xff, 0xff, 0xc3, 0xff, 0xff, 0x81, 0xf0, 0x7f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xfe, 0x7f, 0xff, 0xff, 0xc7, 0xff, 0xff, 0x07, 0xf8, 0x3f, 
	0xff, 0xff, 0xff, 0xf9, 0xff, 0xdf, 0xfc, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0x0f, 0xfc, 0x3f, 
	0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xc1, 0xff, 0xff, 0xff, 0x87, 0xff, 0xfe, 0x1f, 0xfc, 0x3f, 
	0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0x80, 0x01, 0xfe, 0x1f, 0xfe, 0x1f, 
	0xff, 0xff, 0xfe, 0x7f, 0xfe, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0x80, 0x00, 0x7e, 0x1f, 0xfe, 0x1f, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x7c, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x3e, 0x3f, 0xfe, 0x1f, 
	0xff, 0xff, 0xff, 0xfb, 0xfd, 0xbd, 0xff, 0xff, 0xff, 0xff, 0x81, 0xfc, 0x3e, 0x3f, 0xfe, 0x1f, 
	0xff, 0xff, 0xff, 0xe7, 0xfd, 0xbd, 0xff, 0xff, 0xff, 0xff, 0x83, 0xfe, 0x1e, 0x3f, 0xfe, 0x1f, 
	0xff, 0xff, 0xff, 0xef, 0xfd, 0xbc, 0x1f, 0xff, 0xff, 0xff, 0x87, 0xfe, 0x1e, 0x3f, 0xfe, 0x1f, 
	0xff, 0xff, 0xff, 0xdf, 0xfd, 0x9e, 0x1f, 0xff, 0xff, 0xff, 0xcf, 0xfe, 0x1e, 0x3f, 0xfe, 0x1f, 
	0xff, 0xff, 0xff, 0xdf, 0xfd, 0xc8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1e, 0x3f, 0xfe, 0x1f, 
	0xff, 0xff, 0xff, 0xfc, 0x1d, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1e, 0x1f, 0xfc, 0x1f, 
	0xff, 0xff, 0xff, 0xf3, 0xf8, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1e, 0x1f, 0xfc, 0x3f, 
	0xff, 0xff, 0xff, 0xff, 0xe6, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1e, 0x1f, 0xfc, 0x3f, 
	0xff, 0xff, 0xff, 0xff, 0x9e, 0xcf, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0x0f, 0xf8, 0x3f, 
	0xff, 0xff, 0xff, 0xff, 0x1f, 0x67, 0xff, 0xfd, 0xff, 0xff, 0x8f, 0xf8, 0x3f, 0x07, 0xf0, 0x7f, 
	0xff, 0xff, 0xfe, 0x07, 0xff, 0x73, 0xff, 0xff, 0xdf, 0xff, 0x07, 0xf0, 0x7f, 0x81, 0xe0, 0xff, 
	0xff, 0xff, 0xfe, 0x73, 0xfe, 0xf9, 0xff, 0xfb, 0xbf, 0xff, 0x80, 0x00, 0xff, 0xc0, 0x00, 0xff, 
	0xff, 0xff, 0xfe, 0xfc, 0xfe, 0xfd, 0xff, 0xbb, 0xbf, 0xff, 0xc0, 0x01, 0xff, 0xe0, 0x03, 0xff, 
	0xff, 0xff, 0xfe, 0xff, 0x3e, 0xfd, 0xff, 0xff, 0xbf, 0xff, 0xf0, 0x07, 0xff, 0xf8, 0x0f, 0xff, 
	0xff, 0xff, 0xfe, 0x7f, 0x84, 0xfd, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x79, 0xe1, 0xfd, 0xff, 0xdf, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x1f, 0x81, 0xf3, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x3f, 0xfe, 0xe7, 0xff, 0xf6, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xff, 0xf6, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char oneHundred [] PROGMEM = {
	// 'snoopy-woodstock-peanut-gang, 128x64px
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xf8, 0x2f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xfe, 0x0f, 0xf9, 0xff, 0xff, 
	0xff, 0x8f, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0x8f, 0xfc, 0xff, 0xfe, 0x7f, 0xff, 
	0xff, 0x8f, 0xf8, 0x0f, 0xe0, 0x3f, 0xff, 0xff, 0xdf, 0xff, 0xf8, 0x47, 0xff, 0xff, 0xbf, 0xff, 
	0xff, 0x0f, 0xf1, 0xc7, 0xc7, 0x9f, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 
	0xfe, 0x0f, 0xe3, 0xc3, 0xc7, 0x8f, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 
	0xf0, 0x8f, 0xe3, 0xe3, 0x8f, 0x8f, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 
	0xf3, 0x8f, 0xe3, 0xe3, 0x8f, 0x87, 0xff, 0xf7, 0xff, 0xff, 0xf8, 0x03, 0x3f, 0xff, 0xff, 0xff, 
	0xff, 0x8f, 0xe3, 0xe3, 0x8f, 0x87, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xf9, 0xff, 
	0xff, 0x8f, 0xc3, 0xe3, 0x8f, 0x87, 0xff, 0xef, 0xff, 0xcf, 0xff, 0xff, 0xf3, 0xff, 0xfc, 0xff, 
	0xff, 0x8f, 0xc3, 0xe3, 0x8f, 0x87, 0xff, 0xdf, 0xfc, 0x03, 0xff, 0xff, 0xfc, 0xff, 0xfe, 0xff, 
	0xff, 0x8f, 0xe3, 0xe3, 0x8f, 0x87, 0xff, 0xdf, 0xf8, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 
	0xff, 0x8f, 0xe3, 0xe3, 0x8f, 0x8f, 0xff, 0xdf, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 
	0xff, 0x8f, 0xe3, 0xe3, 0xc7, 0x8f, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 
	0xff, 0x8f, 0xf3, 0xc7, 0xc7, 0x8f, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 
	0xff, 0x8f, 0xf9, 0x8f, 0xe3, 0x1f, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x77, 0x9f, 
	0xff, 0x8f, 0xfe, 0x3f, 0xf8, 0x7f, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xc1, 0x9f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0x80, 0xdf, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xfa, 0x00, 0xdf, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xbf, 0xff, 0xff, 0xfe, 0x3f, 0xf4, 0x00, 0xdf, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xfe, 0xff, 0xe8, 0x00, 0x9f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x83, 0xff, 0x0f, 0xff, 0xff, 0xfd, 0xff, 0xd8, 0x01, 0x9f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xec, 0xff, 0xe1, 0xff, 0xff, 0xf3, 0xff, 0xd8, 0x01, 0xbf, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xbf, 0xfc, 0x3f, 0xff, 0x8f, 0xff, 0xb0, 0x03, 0x3f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0x9f, 0xff, 0x80, 0x88, 0x7f, 0xff, 0xb0, 0x07, 0x7f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x1f, 0xff, 0xf1, 0xff, 0xff, 0xff, 0x30, 0x0e, 0x7f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x0f, 0xff, 0xf8, 0x3f, 0xff, 0xfe, 0x20, 0x18, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x01, 0xff, 0xfa, 0x0f, 0xff, 0xcf, 0x30, 0x73, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0xff, 0xf8, 0x27, 0xfe, 0x3f, 0xbf, 0xc7, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x0c, 0xff, 0xf8, 0x77, 0xfd, 0xff, 0x9e, 0x1f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x1e, 0x7f, 0xff, 0xf7, 0xf3, 0xff, 0xf1, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x03, 0x9f, 0xff, 0xe3, 0xf7, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x07, 0xf1, 0xff, 0xe0, 0x0f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x7f, 0xff, 0xff, 0xe0, 0x00, 0x07, 0xfe, 0x3f, 0xe7, 0xef, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xde, 0x73, 0xff, 0xff, 0xf0, 0x00, 0x07, 0xff, 0xf3, 0xef, 0xef, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9e, 0x77, 0xff, 0xff, 0xf0, 0x00, 0x08, 0xff, 0xff, 0x1f, 0xef, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x8e, 0x73, 0xff, 0xff, 0xf0, 0x00, 0x1f, 0x0f, 0xff, 0xbf, 0xef, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x8f, 0xf8, 0xc1, 0xff, 0xf8, 0x00, 0x3f, 0xf0, 0x7f, 0x7f, 0xef, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xc7, 0xff, 0x1c, 0x3f, 0xff, 0xff, 0xff, 0xce, 0xc0, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 
	0xfd, 0xe7, 0xfc, 0x7f, 0x9f, 0xff, 0xff, 0xff, 0x9f, 0x61, 0x3f, 0xe7, 0xff, 0xff, 0xff, 0xff, 
	0xfc, 0xff, 0xcf, 0xff, 0xc7, 0xff, 0xff, 0xff, 0x3f, 0x67, 0xdf, 0xf7, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0x3f, 0xff, 0xfe, 0x19, 0xff, 0xff, 0xfe, 0x5f, 0x03, 0xde, 0xf7, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xcf, 0xff, 0xfe, 0x7f, 0x3f, 0xff, 0xfe, 0xff, 0x3f, 0xde, 0xf3, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xcf, 0xff, 0xf0, 0x1f, 0x3f, 0xff, 0xfc, 0x3f, 0x3f, 0xde, 0xfb, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0x3f, 0xdf, 0xc7, 0x00, 0x7f, 0xff, 0xf9, 0xfe, 0x1f, 0xdf, 0xfd, 0xff, 0xff, 0xff, 0xff, 
	0xfd, 0xff, 0xe4, 0x1f, 0x00, 0x7f, 0xff, 0xfb, 0xfe, 0x7f, 0xdf, 0xfd, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xef, 0xe1, 0xbf, 0x00, 0x7f, 0xff, 0xfb, 0xfc, 0xff, 0xdc, 0xf8, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9c, 0x9c, 0x9f, 0x00, 0x7f, 0xff, 0xf7, 0xfc, 0xff, 0xbe, 0xfd, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xbd, 0xfe, 0x88, 0x00, 0x7f, 0xff, 0xf7, 0xfd, 0xff, 0xbe, 0x63, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x50, 0x00, 0x7f, 0xff, 0xe7, 0xf9, 0xff, 0x7b, 0x03, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x40, 0x00, 0xff, 0xff, 0xe7, 0xf9, 0xff, 0x3f, 0xfb, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x01, 0x83, 0xff, 0xff, 0xe7, 0xf3, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0x09, 0xff, 0xff, 0xff, 0xef, 0xf3, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0x7c, 0x01, 0xff, 0xff, 0xff, 0xe7, 0xf3, 0xff, 0xff, 0xe3, 0x0f, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xf8, 0x00, 0x47, 0xfc, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x07, 0xff, 0xfd, 0xfe, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xfe, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xfd, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xf3, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char party [] PROGMEM = {
	// 'Screenshot 2025-02-22 at 5, 128x64px
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0c, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1b, 0x98, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x37, 0x33, 0x30, 0x0e, 0x03, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x6c, 0xe6, 0x73, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x19, 0xcc, 0xce, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x33, 0x99, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x07, 0x77, 0x38, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x3f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0c, 0xce, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x8f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x39, 0x9c, 0x00, 0x07, 0xff, 0x80, 0xff, 0xff, 0xe3, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x33, 0x38, 0x00, 0x0f, 0xff, 0x3f, 0xff, 0xff, 0xf8, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x06, 0x70, 0x00, 0x3f, 0xcf, 0xff, 0xff, 0xff, 0xfc, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8c, 0xe0, 0x00, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xfe, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x03, 0xf8, 0xff, 0xff, 0x00, 0x7f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x1f, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x0f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x07, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x03, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3b, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x07, 0xff, 
	0xff, 0xff, 0x1e, 0x70, 0x7c, 0xf3, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x0f, 0xfe, 
	0xff, 0xff, 0x8c, 0xe3, 0x1c, 0xf3, 0xff, 0xc0, 0x00, 0x3f, 0xff, 0xff, 0xf0, 0x00, 0x7f, 0xf8, 
	0xff, 0xff, 0xcc, 0xe7, 0x8c, 0xf3, 0xff, 0xf8, 0x00, 0x1f, 0xff, 0xff, 0x80, 0x00, 0x7f, 0xe1, 
	0xff, 0xff, 0xc1, 0xef, 0xcc, 0xf3, 0xff, 0xf8, 0x00, 0x4f, 0xf3, 0xf8, 0x00, 0x00, 0x7f, 0x87, 
	0xff, 0xff, 0xe3, 0xef, 0xcc, 0xf3, 0xff, 0xf8, 0x00, 0x67, 0xf3, 0xe0, 0x00, 0x00, 0x38, 0x3f, 
	0xff, 0xff, 0xf3, 0xe7, 0x8c, 0xe3, 0xff, 0xf8, 0x00, 0x33, 0xf8, 0xe0, 0x00, 0x00, 0x03, 0xff, 
	0xff, 0xff, 0xf3, 0xe3, 0x1c, 0x47, 0xff, 0xf8, 0x00, 0x19, 0xfe, 0x01, 0x80, 0x00, 0x3f, 0xff, 
	0xff, 0xff, 0xf3, 0xf0, 0x3e, 0x0f, 0xff, 0xfc, 0x00, 0x0d, 0xff, 0x83, 0xc0, 0x00, 0x1f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x0c, 0xff, 0x18, 0x7f, 0x00, 0x0f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x06, 0x78, 0x7f, 0xfe, 0x78, 0x0f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x06, 0x01, 0xff, 0xfe, 0x3c, 0x1f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x07, 0x03, 0xff, 0xfe, 0x78, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x06, 0x73, 0xc3, 0xfc, 0x61, 0xff, 0xff, 
	0xfc, 0x0f, 0x06, 0x03, 0xfe, 0x0c, 0x06, 0x7f, 0xc0, 0x3c, 0x78, 0x40, 0x00, 0x0e, 0xff, 0xff, 
	0xf8, 0x07, 0x8e, 0x01, 0xfe, 0x1c, 0x06, 0x7f, 0xf0, 0x20, 0xff, 0x00, 0x27, 0x9e, 0xff, 0xff, 
	0xf8, 0xe3, 0x8e, 0x38, 0xff, 0x3f, 0x3e, 0x7f, 0xff, 0x0f, 0xff, 0x9e, 0x67, 0xf8, 0xff, 0xff, 
	0xf8, 0xf3, 0x8e, 0x3c, 0xff, 0x3f, 0x3e, 0x7f, 0xff, 0xff, 0xff, 0x87, 0xe1, 0xf8, 0xff, 0xff, 
	0xf8, 0xf3, 0x8e, 0x3c, 0xff, 0x3f, 0x3e, 0x7f, 0xff, 0xff, 0xff, 0x3e, 0x1f, 0xfe, 0xff, 0xff, 
	0xf8, 0xe3, 0x8e, 0x38, 0xff, 0x3f, 0x3e, 0x7f, 0xff, 0xff, 0xff, 0x38, 0xff, 0xf8, 0xff, 0xff, 
	0xf8, 0x07, 0x8e, 0x01, 0xfe, 0x1f, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x03, 0xf0, 0x39, 0xe0, 0x3f, 
	0xf8, 0x0f, 0x06, 0x03, 0xfe, 0x0f, 0x3e, 0x7f, 0xff, 0xff, 0xff, 0xc7, 0xc7, 0xc1, 0x9f, 0x9f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0x3f, 0xf2, 0x7f, 0xcf, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9e, 0x7f, 0xe0, 0xff, 0xe7, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3e, 0x7f, 0x01, 0xf8, 0x07, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7e, 0x7f, 0xf9, 0xff, 0xe7, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7e, 0x7f, 0xf9, 0xff, 0xf7, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xfe, 0x7f, 0x81, 0xff, 0x07, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0x3f, 0xf9, 0xff, 0xe7, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0x3f, 0xfd, 0xff, 0xf7, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0x00, 0x1f, 0xfd, 0xff, 0xf7, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0x9f, 0xfd, 0xff, 0xe7, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xff, 0xf9, 0xff, 0xe7, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0x0f, 0xff, 0xff, 0xf8, 0xff, 0xc7, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xfe, 0x03, 0xff, 0xff, 0xf0, 0x03, 0x8f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x08, 0x00, 0x00, 0x07, 0xf8, 0x3f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};


void setup()
{
  Serial.begin(9600);
  Wire.begin();

  // RTC setup
  if (!rtc.begin())
  {
    Serial.println("RTC module not present!");
    for(;;); // Loops execution
  }
  // if (rtc.lostPower()) 
  // {
  //   // Adjusts to compile time
  //   rtc.adjust(DateTime(F(__DATE__),F(__TIME__)));
  // }
  // Uncomment and run if recompiling 
  // rtc.adjust(DateTime(F(__DATE__),F(__TIME__)));

  Serial.println(F("RTC module present."));

  // LED setup
  for (int i = 0; i < numPins; ++i) {
    pinMode(ledPins[i], OUTPUT);
    digitalWrite(ledPins[i], LOW);
  }
  Serial.println(F("LEDs connected."));

  // OLED display setup
  display.begin(SH1106_SWITCHCAPVCC, 0x3C); // Address 0x3C for 128x64
  Serial.println(F("OLED module connected."));
  display.clearDisplay();
  displayImg(intro); // Display custom intro message
  delay(10000);
  display.clearDisplay();
}


void loop()
{
  display.clearDisplay();
  DateTime now = rtc.now();
  rtcLogger(now);

  // Compute seconds until target date
  long diffSecs = endDate.unixtime() - (now.unixtime() + drift);

  // Convert to days
  //// If difference is greater than 0, round to nearest day; otherwise, set to 0
  //// Note: 86400 seconds in a full day
  long countdown = (diffSecs > 0) ? (diffSecs + 86399) / 86400 : 0;

  switch(countdown) {
    case 0:
      display.clearDisplay();
      displayImg(party);
      partyLights();
      break;
    case 1:
      display.clearDisplay();
      displayImg(one);
      break;
    case 10:
      display.clearDisplay();
      displayImg(ten);
      break;
    case 25:
      display.clearDisplay();
      displayImg(twentyFive);
      break;
    case 50:
      display.clearDisplay();
      displayImg(fifty);
      break;
    case 100:
      display.clearDisplay();
      displayImg(oneHundred);
      break;
    default:
      display.clearDisplay();
      displayCountdown(countdown);
      break;
  };

}


// Helper Functions
//// Displays number of days
void displayCountdown(int count) {
      display.setTextSize(6);
      display.setTextColor(WHITE);
      if (count > 99) display.setCursor(10, 10);
      else if (count > 9) display.setCursor(32, 10);
      else display.setCursor(51, 10);
      display.println(count);
      display.display();
}

//// Displays 128x64 bitmap
void displayImg(const unsigned char* img) {
  display.clearDisplay();
  display.drawBitmap(
    (display.width() - 128),
    (display.height() - 64),
    img, 128, 64, 1);
  display.display();
}

//// Blinks LEDs in alternating pattern
void partyLights(void) {
  // https://forum.arduino.cc/t/how-do-i-blink-multiple-leds-in-a-sequence-using-millis/878638
  unsigned long currentMillis = millis();

  if (currentMillis - previousTime >= interval) {
        previousTime = currentMillis;
    digitalWrite(ledPins[state*2], LOW);
    digitalWrite(ledPins[state*2+1], LOW);
    state++;
    if ( state >= numStates ) {
      state = 0;
    }
    digitalWrite(ledPins[state*2], HIGH);
    digitalWrite(ledPins[state*2+1], HIGH);
  }
}

//// Logs current RTC data to Serial Monitor (YYYY/MM/DD HH:MM:SS)
void rtcLogger(DateTime now) {
  Serial.print("RTC reading: ");
  Serial.print(now.year(), DEC);
  Serial.print('/');
  Serial.print(now.month(), DEC);
  Serial.print('/');
  Serial.print(now.day(), DEC);
  Serial.print(' ');
  Serial.print(now.hour(), DEC);
  Serial.print(':');
  Serial.print(now.minute(), DEC);
  Serial.print(':');
  Serial.print(now.second(), DEC);
  Serial.println();
}
